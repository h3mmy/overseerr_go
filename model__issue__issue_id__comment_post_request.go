/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr_go

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IssueIssueIdCommentPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssueIssueIdCommentPostRequest{}

// IssueIssueIdCommentPostRequest struct for IssueIssueIdCommentPostRequest
type IssueIssueIdCommentPostRequest struct {
	Message string `json:"message"`
}

type _IssueIssueIdCommentPostRequest IssueIssueIdCommentPostRequest

// NewIssueIssueIdCommentPostRequest instantiates a new IssueIssueIdCommentPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueIssueIdCommentPostRequest(message string) *IssueIssueIdCommentPostRequest {
	this := IssueIssueIdCommentPostRequest{}
	this.Message = message
	return &this
}

// NewIssueIssueIdCommentPostRequestWithDefaults instantiates a new IssueIssueIdCommentPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueIssueIdCommentPostRequestWithDefaults() *IssueIssueIdCommentPostRequest {
	this := IssueIssueIdCommentPostRequest{}
	return &this
}

// GetMessage returns the Message field value
func (o *IssueIssueIdCommentPostRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *IssueIssueIdCommentPostRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *IssueIssueIdCommentPostRequest) SetMessage(v string) {
	o.Message = v
}

func (o IssueIssueIdCommentPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueIssueIdCommentPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *IssueIssueIdCommentPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIssueIssueIdCommentPostRequest := _IssueIssueIdCommentPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIssueIssueIdCommentPostRequest)

	if err != nil {
		return err
	}

	*o = IssueIssueIdCommentPostRequest(varIssueIssueIdCommentPostRequest)

	return err
}

type NullableIssueIssueIdCommentPostRequest struct {
	value *IssueIssueIdCommentPostRequest
	isSet bool
}

func (v NullableIssueIssueIdCommentPostRequest) Get() *IssueIssueIdCommentPostRequest {
	return v.value
}

func (v *NullableIssueIssueIdCommentPostRequest) Set(val *IssueIssueIdCommentPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueIssueIdCommentPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueIssueIdCommentPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueIssueIdCommentPostRequest(val *IssueIssueIdCommentPostRequest) *NullableIssueIssueIdCommentPostRequest {
	return &NullableIssueIssueIdCommentPostRequest{value: val, isSet: true}
}

func (v NullableIssueIssueIdCommentPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueIssueIdCommentPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


