/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MovieMovieIdRatingscombinedGet200ResponseImdb type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MovieMovieIdRatingscombinedGet200ResponseImdb{}

// MovieMovieIdRatingscombinedGet200ResponseImdb struct for MovieMovieIdRatingscombinedGet200ResponseImdb
type MovieMovieIdRatingscombinedGet200ResponseImdb struct {
	Title *string `json:"title,omitempty"`
	Url *string `json:"url,omitempty"`
	CriticsScore *float32 `json:"criticsScore,omitempty"`
}

// NewMovieMovieIdRatingscombinedGet200ResponseImdb instantiates a new MovieMovieIdRatingscombinedGet200ResponseImdb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMovieMovieIdRatingscombinedGet200ResponseImdb() *MovieMovieIdRatingscombinedGet200ResponseImdb {
	this := MovieMovieIdRatingscombinedGet200ResponseImdb{}
	return &this
}

// NewMovieMovieIdRatingscombinedGet200ResponseImdbWithDefaults instantiates a new MovieMovieIdRatingscombinedGet200ResponseImdb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMovieMovieIdRatingscombinedGet200ResponseImdbWithDefaults() *MovieMovieIdRatingscombinedGet200ResponseImdb {
	this := MovieMovieIdRatingscombinedGet200ResponseImdb{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) SetUrl(v string) {
	o.Url = &v
}

// GetCriticsScore returns the CriticsScore field value if set, zero value otherwise.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) GetCriticsScore() float32 {
	if o == nil || IsNil(o.CriticsScore) {
		var ret float32
		return ret
	}
	return *o.CriticsScore
}

// GetCriticsScoreOk returns a tuple with the CriticsScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) GetCriticsScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.CriticsScore) {
		return nil, false
	}
	return o.CriticsScore, true
}

// HasCriticsScore returns a boolean if a field has been set.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) HasCriticsScore() bool {
	if o != nil && !IsNil(o.CriticsScore) {
		return true
	}

	return false
}

// SetCriticsScore gets a reference to the given float32 and assigns it to the CriticsScore field.
func (o *MovieMovieIdRatingscombinedGet200ResponseImdb) SetCriticsScore(v float32) {
	o.CriticsScore = &v
}

func (o MovieMovieIdRatingscombinedGet200ResponseImdb) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MovieMovieIdRatingscombinedGet200ResponseImdb) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.CriticsScore) {
		toSerialize["criticsScore"] = o.CriticsScore
	}
	return toSerialize, nil
}

type NullableMovieMovieIdRatingscombinedGet200ResponseImdb struct {
	value *MovieMovieIdRatingscombinedGet200ResponseImdb
	isSet bool
}

func (v NullableMovieMovieIdRatingscombinedGet200ResponseImdb) Get() *MovieMovieIdRatingscombinedGet200ResponseImdb {
	return v.value
}

func (v *NullableMovieMovieIdRatingscombinedGet200ResponseImdb) Set(val *MovieMovieIdRatingscombinedGet200ResponseImdb) {
	v.value = val
	v.isSet = true
}

func (v NullableMovieMovieIdRatingscombinedGet200ResponseImdb) IsSet() bool {
	return v.isSet
}

func (v *NullableMovieMovieIdRatingscombinedGet200ResponseImdb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMovieMovieIdRatingscombinedGet200ResponseImdb(val *MovieMovieIdRatingscombinedGet200ResponseImdb) *NullableMovieMovieIdRatingscombinedGet200ResponseImdb {
	return &NullableMovieMovieIdRatingscombinedGet200ResponseImdb{value: val, isSet: true}
}

func (v NullableMovieMovieIdRatingscombinedGet200ResponseImdb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMovieMovieIdRatingscombinedGet200ResponseImdb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


