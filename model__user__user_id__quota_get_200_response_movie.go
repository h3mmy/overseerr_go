/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the UserUserIdQuotaGet200ResponseMovie type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserUserIdQuotaGet200ResponseMovie{}

// UserUserIdQuotaGet200ResponseMovie struct for UserUserIdQuotaGet200ResponseMovie
type UserUserIdQuotaGet200ResponseMovie struct {
	Days *float32 `json:"days,omitempty"`
	Limit *float32 `json:"limit,omitempty"`
	Used *float32 `json:"used,omitempty"`
	Remaining *float32 `json:"remaining,omitempty"`
	Restricted *bool `json:"restricted,omitempty"`
}

// NewUserUserIdQuotaGet200ResponseMovie instantiates a new UserUserIdQuotaGet200ResponseMovie object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserUserIdQuotaGet200ResponseMovie() *UserUserIdQuotaGet200ResponseMovie {
	this := UserUserIdQuotaGet200ResponseMovie{}
	return &this
}

// NewUserUserIdQuotaGet200ResponseMovieWithDefaults instantiates a new UserUserIdQuotaGet200ResponseMovie object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserUserIdQuotaGet200ResponseMovieWithDefaults() *UserUserIdQuotaGet200ResponseMovie {
	this := UserUserIdQuotaGet200ResponseMovie{}
	return &this
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *UserUserIdQuotaGet200ResponseMovie) GetDays() float32 {
	if o == nil || IsNil(o.Days) {
		var ret float32
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) GetDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given float32 and assigns it to the Days field.
func (o *UserUserIdQuotaGet200ResponseMovie) SetDays(v float32) {
	o.Days = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *UserUserIdQuotaGet200ResponseMovie) GetLimit() float32 {
	if o == nil || IsNil(o.Limit) {
		var ret float32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) GetLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given float32 and assigns it to the Limit field.
func (o *UserUserIdQuotaGet200ResponseMovie) SetLimit(v float32) {
	o.Limit = &v
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *UserUserIdQuotaGet200ResponseMovie) GetUsed() float32 {
	if o == nil || IsNil(o.Used) {
		var ret float32
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) GetUsedOk() (*float32, bool) {
	if o == nil || IsNil(o.Used) {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) HasUsed() bool {
	if o != nil && !IsNil(o.Used) {
		return true
	}

	return false
}

// SetUsed gets a reference to the given float32 and assigns it to the Used field.
func (o *UserUserIdQuotaGet200ResponseMovie) SetUsed(v float32) {
	o.Used = &v
}

// GetRemaining returns the Remaining field value if set, zero value otherwise.
func (o *UserUserIdQuotaGet200ResponseMovie) GetRemaining() float32 {
	if o == nil || IsNil(o.Remaining) {
		var ret float32
		return ret
	}
	return *o.Remaining
}

// GetRemainingOk returns a tuple with the Remaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) GetRemainingOk() (*float32, bool) {
	if o == nil || IsNil(o.Remaining) {
		return nil, false
	}
	return o.Remaining, true
}

// HasRemaining returns a boolean if a field has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) HasRemaining() bool {
	if o != nil && !IsNil(o.Remaining) {
		return true
	}

	return false
}

// SetRemaining gets a reference to the given float32 and assigns it to the Remaining field.
func (o *UserUserIdQuotaGet200ResponseMovie) SetRemaining(v float32) {
	o.Remaining = &v
}

// GetRestricted returns the Restricted field value if set, zero value otherwise.
func (o *UserUserIdQuotaGet200ResponseMovie) GetRestricted() bool {
	if o == nil || IsNil(o.Restricted) {
		var ret bool
		return ret
	}
	return *o.Restricted
}

// GetRestrictedOk returns a tuple with the Restricted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) GetRestrictedOk() (*bool, bool) {
	if o == nil || IsNil(o.Restricted) {
		return nil, false
	}
	return o.Restricted, true
}

// HasRestricted returns a boolean if a field has been set.
func (o *UserUserIdQuotaGet200ResponseMovie) HasRestricted() bool {
	if o != nil && !IsNil(o.Restricted) {
		return true
	}

	return false
}

// SetRestricted gets a reference to the given bool and assigns it to the Restricted field.
func (o *UserUserIdQuotaGet200ResponseMovie) SetRestricted(v bool) {
	o.Restricted = &v
}

func (o UserUserIdQuotaGet200ResponseMovie) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserUserIdQuotaGet200ResponseMovie) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Used) {
		toSerialize["used"] = o.Used
	}
	if !IsNil(o.Remaining) {
		toSerialize["remaining"] = o.Remaining
	}
	if !IsNil(o.Restricted) {
		toSerialize["restricted"] = o.Restricted
	}
	return toSerialize, nil
}

type NullableUserUserIdQuotaGet200ResponseMovie struct {
	value *UserUserIdQuotaGet200ResponseMovie
	isSet bool
}

func (v NullableUserUserIdQuotaGet200ResponseMovie) Get() *UserUserIdQuotaGet200ResponseMovie {
	return v.value
}

func (v *NullableUserUserIdQuotaGet200ResponseMovie) Set(val *UserUserIdQuotaGet200ResponseMovie) {
	v.value = val
	v.isSet = true
}

func (v NullableUserUserIdQuotaGet200ResponseMovie) IsSet() bool {
	return v.isSet
}

func (v *NullableUserUserIdQuotaGet200ResponseMovie) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserUserIdQuotaGet200ResponseMovie(val *UserUserIdQuotaGet200ResponseMovie) *NullableUserUserIdQuotaGet200ResponseMovie {
	return &NullableUserUserIdQuotaGet200ResponseMovie{value: val, isSet: true}
}

func (v NullableUserUserIdQuotaGet200ResponseMovie) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserUserIdQuotaGet200ResponseMovie) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


