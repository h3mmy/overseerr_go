/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MediaMediaIdStatusPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaMediaIdStatusPostRequest{}

// MediaMediaIdStatusPostRequest struct for MediaMediaIdStatusPostRequest
type MediaMediaIdStatusPostRequest struct {
	Is4k *bool `json:"is4k,omitempty"`
}

// NewMediaMediaIdStatusPostRequest instantiates a new MediaMediaIdStatusPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaMediaIdStatusPostRequest() *MediaMediaIdStatusPostRequest {
	this := MediaMediaIdStatusPostRequest{}
	return &this
}

// NewMediaMediaIdStatusPostRequestWithDefaults instantiates a new MediaMediaIdStatusPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaMediaIdStatusPostRequestWithDefaults() *MediaMediaIdStatusPostRequest {
	this := MediaMediaIdStatusPostRequest{}
	return &this
}

// GetIs4k returns the Is4k field value if set, zero value otherwise.
func (o *MediaMediaIdStatusPostRequest) GetIs4k() bool {
	if o == nil || IsNil(o.Is4k) {
		var ret bool
		return ret
	}
	return *o.Is4k
}

// GetIs4kOk returns a tuple with the Is4k field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaMediaIdStatusPostRequest) GetIs4kOk() (*bool, bool) {
	if o == nil || IsNil(o.Is4k) {
		return nil, false
	}
	return o.Is4k, true
}

// HasIs4k returns a boolean if a field has been set.
func (o *MediaMediaIdStatusPostRequest) HasIs4k() bool {
	if o != nil && !IsNil(o.Is4k) {
		return true
	}

	return false
}

// SetIs4k gets a reference to the given bool and assigns it to the Is4k field.
func (o *MediaMediaIdStatusPostRequest) SetIs4k(v bool) {
	o.Is4k = &v
}

func (o MediaMediaIdStatusPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaMediaIdStatusPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Is4k) {
		toSerialize["is4k"] = o.Is4k
	}
	return toSerialize, nil
}

type NullableMediaMediaIdStatusPostRequest struct {
	value *MediaMediaIdStatusPostRequest
	isSet bool
}

func (v NullableMediaMediaIdStatusPostRequest) Get() *MediaMediaIdStatusPostRequest {
	return v.value
}

func (v *NullableMediaMediaIdStatusPostRequest) Set(val *MediaMediaIdStatusPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaMediaIdStatusPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaMediaIdStatusPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaMediaIdStatusPostRequest(val *MediaMediaIdStatusPostRequest) *NullableMediaMediaIdStatusPostRequest {
	return &NullableMediaMediaIdStatusPostRequest{value: val, isSet: true}
}

func (v NullableMediaMediaIdStatusPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaMediaIdStatusPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


